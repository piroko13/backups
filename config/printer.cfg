# host MCU service is preinstalled and ready to use with:

# Mainsail settings
[include mainsail.cfg]
[include timelapse.cfg]
[include led_effects.cfg]
[include telegram_bot_macros.cfg]
[include display_custom.cfg]
[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
[include ./KAMP/Line_Purge.cfg]
[include ./KAMP/Smart_Park.cfg]
[exclude_object]

# Other settings

# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 V3.0. To use this config, the firmware should be compiled for the
# STM32G0B1 with a "8KiB bootloader" and USB communication.

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and the restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

[virtual_sdcard]
path: ~/printer_data/gcodes

# [output_pin mainpower]
# pin: PC12
# value: 1
# The value to initially set the voltage pin during MCU configuration
# The default is 0 (for low voltage)
# shutdown_value: 0
# The value to set the pin to an MCU shutdown event. The default
# is 0 (for low voltage)

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 64
rotation_distance: 40
endstop_pin: ^PC0
position_endstop: -27
position_min: -27
position_max: 230
homing_speed: 80

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 0.580
stealthchop_threshold: 999999

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 64
rotation_distance: 40
endstop_pin: ^PC1
position_endstop: -11
position_min: -11
position_max: 220
homing_speed: 80

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
run_current: 0.580
stealthchop_threshold: 999999

[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 64
rotation_distance: 2
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 250

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.580
stealthchop_threshold: 999999

[safe_z_home]
home_xy_position: 149, 120 #center coordinates according to default firmware
speed: 80
z_hop: 10
z_hop_speed: 5

[extruder]
max_extrude_only_distance: 350.0
max_extrude_cross_section: 5
step_pin: PB3
dir_pin: !PB4
enable_pin: !PD1
microsteps: 64
rotation_distance: 22.110
nozzle_diameter: 0.600
filament_diameter: 1.750
heater_pin: PC8
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
#control: pid
#pid_Kp: 21.527
#pid_Ki: 1.063
#pid_Kd: 108.982
min_temp: 0
max_temp: 250

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
stealthchop_threshold: 999999

[heater_bed]
heater_pin: PC9
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_Kp: 54.027
#pid_Ki: 0.770
#pid_Kd: 948.182
min_temp: 0
max_temp: 130

[heater_fan heatbreak_cooling_fan]
pin: PB15
heater: extruder
heater_temp: 50

[controller_fan controller_fan]
pin: PC7
idle_timeout: 60

[fan]
pin:PC6

[mcu]
serial: /dev/ttyS0
restart_method: command
baud: 115200

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

# Pin mappings for BL_T port
[bltouch]
sensor_pin: ^PC14
control_pin: PA1
x_offset: -39
y_offset: -10
#z_offset: 0
probe_with_touch_mode: True
pin_up_touch_mode_reports_triggered: True
stow_on_each_sample: False

[display]
lcd_type: uc1701
cs_pin: PB8
a0_pin: PD6
rst_pin: PB9
encoder_pins: ^PA9, ^PA10
click_pin: ^!PB5
contrast: 63
spi_software_sclk_pin: PA5
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6

[neopixel SKR_screen]
pin: PA15
chain_count: 3
initial_RED: 0.4
initial_GREEN: 0.05
initial_BLUE: 0.0
color_order: RGB

[delayed_gcode welcome]
initial_duration: .1
gcode:
      SET_LED LED=SKR_screen RED=0.5 GREEN=0.0 BLUE=0.0 TRANSMIT=0
      SET_LED LED=SKR_screen RED=0.0 GREEN=0.0 BLUE=0.5 INDEX=1 TRANSMIT=1

[output_pin relay]
pin: PC13
value: 1
shutdown_value: 0

[board_pins]
aliases:
  # EXP1 header
  EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8, EXP1_9=<GND>,
  EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PD6, EXP1_10=<5V>

# Leveling segment

[bed_screws]
screw1: 23, 24
screw2: 191, 24
screw3: 191, 195
screw4: 23, 195

[screws_tilt_adjust]
screw1: 62, 34
screw1_name: front left screw
screw2: 230, 34
screw2_name: front right screw
screw3: 230, 205
screw3_name: rear left screw
screw4: 62, 205
screw4_name: rear right screw
horizontal_move_z: 10
speed: 50
screw_thread: CW-M4

[bed_mesh]
speed: 120
horizontal_move_z: 5
mesh_min: 15, 15
mesh_max: 190, 198
probe_count: 6, 6
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 6
split_delta_z: .025

[pause_resume]

[display_status]

[respond]

[gcode_arcs]

[firmware_retraction]
#retract_length: 4

# gcode macros segment

[gcode_macro PAUSE]
description: Pause actual running print
rename_existing: PAUSE_BASE
gcode:
  PAUSE_BASE
  STATUS_BUSY
  _TOOLHEAD_PARK_PAUSE_CANCEL

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  #### read extrude from _TOOLHEAD_PARK_PAUSE_CANCEL macro ####
  {% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY) %}
  {%else %}
    {% set get_params = " " %}
  {% endif %}
  #### end of definitions ####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
  ## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  #### set park position for x and y ####
  # default is your max position from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 10.0 %}
  #### calculate save lift position ####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  #### end of definitions ####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude|lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}


[gcode_macro M300]
description: Beeper macro
gcode:
  SET_PIN PIN=beeper Value=1
  G4 P{params.P|default(150)|int}
  SET_PIN PIN=beeper Value=0

[gcode_macro BEEP]
gcode:
  M300 P100

[gcode_macro BEEP_TWICE]
gcode:
  M300 P100
  M300 P100

[gcode_macro BEEP_LONG]
gcode:
  M300 P500

[respond]
default_type: echo

[gcode_macro Heat_to_remove]
gcode:
  STATUS_HEATING
  M140 S60
  M117 Heating bed to remove print...
  BEEP
  M190 S60
  BEEP_TWICE
  M117 Done heating!!!

[gcode_macro START_PRINT]
gcode:
  BEEP
  G92 E0 ; Reset extruder
  G28 ; Home all axes
  STATUS_HEATING
  M104 S{180}
  M140 S{50}
  M190 S{50}
  BED_MESH_CALIBRATE
  # G1 Z2.0 F3000 ; Move Z axis up a little to prevent scratching the bed
  SMART_PARK
  M104 S{params.EXTRUDER_TEMP}
  M140 S{params.BED_TEMP}
  STATUS_HEATING
  M190 S{params.BED_TEMP}
  LINE_PURGE
  STATUS_PRINTING
  G92 E0 ; Reset extruder
  G1 Z2.0 F3000 ; Move Z axis up little to prevent scratching of bed
  G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish
  M117 Printing...

[gcode_macro END_PRINT]
gcode:
  BEEP_TWICE
  G91 ; Relative positioning
  G1 E-5 F2700 ; Retract a bit
  G1 E-2 Z0.2 F2400 ; Retract and raise Z
  G1 X5 Y5 F3000 ; Wipe out
  G1 Z10 ; Raise Z more
  G90 ; Absolute positioning
  G1 X0 Y210 ; Present print
  M106 S0 ; Turn off fan
  M104 S0 ; Turn off extruder
  M140 S0 ; Turn off bed
  M84 X Y E ; Disable all steppers but Z
  BED_MESH_CLEAR
  STATUS_PART_READY
  M117 Done!!!

[gcode_macro PURGE]
gcode:
  M117 PURGING...
  G91
  G1 E45.0 F250
  G90

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
  SAVE_GCODE_STATE NAME = load_state
  G91
  G92 E0
  G1 E350 F{max_velocity} ; Fast load
  G1 E25 F{speed} ; purge
  BEEP_TWICE
  RESTORE_GCODE_STATE NAME = load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set speed = params.SPEED|default(300) %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
  SAVE_GCODE_STATE NAME = unload_state
  G91
  BEEP
  G92 E0
  G1 E25 F{speed} ; Purge
  G1 E-350 F{max_velocity} ; Fast unload
  BEEP_TWICE
  RESTORE_GCODE_STATE NAME = unload_state

[gcode_macro T0]
gcode:

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.249
#*# pid_ki = 1.336
#*# pid_kd = 101.134
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.714
#*# pid_ki = 1.260
#*# pid_kd = 964.661
#*#
#*# [bltouch]
#*# z_offset = 2.220
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.076562, 0.072656, 0.074844
#*# 	  0.053906, 0.051875, 0.050781
#*# 	  0.084219, 0.085312, 0.091094
#*# x_count = 3
#*# y_count = 3
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 106.97
#*# max_x = 113.03
#*# min_y = 97.3
#*# max_y = 122.69999999999999
